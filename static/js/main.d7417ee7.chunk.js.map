{"version":3,"sources":["components/Counter.jsx","App.js","index.js"],"names":["Counter","this","props","count","addOne","add100","increase","type","onClick","React","Component","App","state","setState","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAb,4JACE,WAAU,IAAD,EACqCC,KAAKC,MAAzCC,EADD,EACCA,MAAOC,EADR,EACQA,OAAQC,EADhB,EACgBA,OAAQC,EADxB,EACwBA,SAE/B,OACE,oCACE,6CACaH,IAEb,4BAAQI,KAAK,SAASC,QAASJ,GAA/B,SACA,4BAAQG,KAAK,SAASC,QAASH,GAA/B,WACA,4BAAQE,KAAK,SAASC,QAASF,GAA/B,iBAXR,GAA6BG,IAAMC,WCuCpBC,G,kNAtCbC,MAAQ,CACNT,MAAO,G,EAGTC,OAAS,WACP,EAAKS,UAAS,SAAAD,GAAK,MAAK,CACtBT,MAAOS,EAAMT,MAAQ,O,EAIzBE,OAAS,WACP,EAAKQ,UAAS,SAAAD,GAAK,MAAK,CACtBT,MAAOS,EAAMT,MAAQ,S,EAIzBG,SAAW,WACT,EAAKF,SAED,EAAKQ,MAAMT,MAAQ,IAAM,GAC3B,EAAKE,U,4CAIT,WAAU,IACAD,EAAoCH,KAApCG,OAAQC,EAA4BJ,KAA5BI,OAAQC,EAAoBL,KAApBK,SAAUM,EAAUX,KAAVW,MAElC,OACE,kBAAC,EAAD,CACET,MAAOS,EAAMT,MACbC,OAAQA,EACRC,OAAQA,EACRC,SAAUA,Q,GAjCAG,IAAMC,YCAxBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.d7417ee7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class Counter extends React.Component {\n  render() {\n    const { count, addOne, add100, increase } = this.props;\n\n    return (\n      <>\n        <h1>\n          {`Count: ${count}`}\n        </h1>\n        <button type=\"button\" onClick={addOne}>Add 1</button>\n        <button type=\"button\" onClick={add100}>Add 100</button>\n        <button type=\"button\" onClick={increase}>Increase</button>\n      </>\n    );\n  }\n}\n\nCounter.propTypes = {\n  count: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Counter } from './components/Counter';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(state => ({\n      count: state.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(state => ({\n      count: state.count + 100,\n    }));\n  };\n\n  increase = () => {\n    this.addOne();\n\n    if (this.state.count % 5 === 0) {\n      this.add100();\n    }\n  };\n\n  render() {\n    const { addOne, add100, increase, state } = this;\n\n    return (\n      <Counter\n        count={state.count}\n        addOne={addOne}\n        add100={add100}\n        increase={increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}